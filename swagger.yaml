---
openapi: 3.0.0
info:
  title: Lordos App API Documentation
  version: 1.0.0
  description: REST APIs Library and Documentation.
servers:
  - url: "http://localhost:7007/"
    description: Development Server
tags:
  - name: User
    description: Everything about users
  - name: Session
    description: Everything about sessions
paths:
  /users:
    get:
      tags:
        - User
      summary: Returns all users.
      operationId: getUsers
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /user/{code}:
    get:
      tags:
        - User
      summary: Returns user by code
      operationId: getUserByCode
      parameters:
        - name: code
          in: path
          required: true
          description: The code of the user to return.
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
        "500":
          description: Server Error
  /user/create:
    post:
      tags:
        - User
      summary: Creates a new user.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 101
                RoleId:
                  type: number
                  example: 1
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - code,RoleId
        "500":
          description: Server Error
  /users/delete-all:
    delete:
      tags:
        - User
      summary: Deletes all users from the system.
      operationId: deleteUsers
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /roles:
    get:
      tags:
        - User
      summary: Returns all roles.
      operationId: getRoles
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /sessions:
    get:
      tags:
        - Session
      summary: Returns all sessions.
      operationId: getSessions
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /session/{id}:
    get:
      tags:
        - Session
      summary: Returns sessions by id.
      operationId: getSessionById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the sessions to return.
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /session/user/{code}:
    get:
      tags:
        - Session
      summary: Returns sessions if any user.
      operationId: getSessionByUser
      parameters:
        - name: code
          in: path
          required: true
          description: The code of the user to return the session.
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
        "500":
          description: Server Error
  /session/count/{id}:
    get:
      tags:
        - Session
      summary: Returns activated count sessions by id.
      operationId: getActivatedSessionsById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the sessions to return count.
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /session/create:
    post:
      tags:
        - Session
      summary: Creates a new session.
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1000
                code:
                  type: string
                  example: 101
                activated:
                  type: boolean
                  example: false
                end_date:
                  type: string
                  example: 2022-01-31T13:00
                status:
                  type: string
                  example: Inactive
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - id,code
        "500":
          description: Server Error
  /sessions/update/{id}:
    put:
      tags:
        - Session
      summary: Updates session start date, end date or status by id.
      operationId: putSessionById
      parameters:
        - name: id
          in: path
          required: true
          description: The session id to change.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  example: 2022-01-01T13:00
                end_date:
                  type: string
                  example: 2022-01-08T13:00
                status:
                  type: string
                  example: Inactive
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /session/update/{id}/{code}:
    put:
      tags:
        - Session
      summary: Updates session activated, start date, end date or status by id and code.
      operationId: putSessionByIdAndCode
      parameters:
        - name: id
          in: path
          required: true
          description: The session id to change.
        - name: code
          in: path
          required: true
          description: The session user code to change.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activated:
                  type: boolean
                  example: false
                start_date:
                  type: string
                  example: 2022-01-01T13:00
                end_date:
                  type: string
                  example: 2022-01-08T13:00
                status:
                  type: string
                  example: Inactive
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
components:
  schemas:
    User:
      type: object
      required:
        - code
        - RoleId
      properties:
        code:
          type: string
          description: The user code
        RoleId:
          type: number
          description: The user role id (1 || 2 = Parent & 3 = Child)
      example:
        id: 4
        code: C2A3
        RoleId: 3
    Role:
      type: object
      required:
        - title
      properties:
        id:
          type: number
          description: The id number
        title:
          type: string
          description: The title of role
      example:
        id: 4
        title: Parent 1
    Session:
      type: object
      required:
        - id
      properties:
        id:
          type: number
          description: The auto-incremented id number
        code:
          type: string
          description: The code of user 1
        activated:
          type: string
          description: false
        start_date:
          type: string
          description: The start date of session
        end_date:
          type: string
          description: The end date of session
        status:
          type: string
          description: The status of session
      example:
        id: 4
        code: 101
        activated: false
        start_date: 2022-08-02T14:00:06.022Z
        end_date: 2022-08-09T14:00:06.022Z
        status: Inactive

