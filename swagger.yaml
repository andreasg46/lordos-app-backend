---
openapi: 3.0.0
info:
  title: Lordos App API Documentation
  version: 1.0.0
  description: REST APIs Library and Documentation.
servers:
  - url: "http://localhost:7050"
    description: Development Server
  - url: "https://dev.silversky3d.com/api-lordos/"
    description: Production Server
tags:
  - name: User
    description: Everything about users
  - name: Session
    description: Everything about sessions
  - name: Question
    description: Everything about questions
  - name: Answer
    description: Everything about answers
  - name: Push Notifications
    description: Everything about push Notifications
paths:
  /users:
    get:
      tags:
        - User
      summary: Returns all users.
      operationId: getUsers
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /user/{code}:
    get:
      tags:
        - User
      summary: Returns user by code
      operationId: getUserByCode
      parameters:
        - name: code
          in: path
          required: true
          description: The code of the user to return.
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
        "500":
          description: Server Error
  /user/create:
    post:
      tags:
        - User
      summary: Creates a new user.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 101
                RoleId:
                  type: number
                  example: 1
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - code,RoleId
        "500":
          description: Server Error
  /users/delete-all:
    delete:
      tags:
        - User
      summary: Deletes all users from the system.
      operationId: deleteUsers
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /roles:
    get:
      tags:
        - User
      summary: Returns all roles.
      operationId: getRoles
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /role/{id}:
    get:
      tags:
        - User
      summary: Returns role by id
      operationId: getRoleById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the role to return.
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
        "500":
          description: Server Error
  /sessions:
    get:
      tags:
        - Session
      summary: Returns all sessions.
      operationId: getSessions
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /session/{id}:
    get:
      tags:
        - Session
      summary: Returns sessions by id.
      operationId: getSessionById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the sessions to return.
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /session/user/{code}:
    get:
      tags:
        - Session
      summary: Returns sessions if any user.
      operationId: getSessionByUser
      parameters:
        - name: code
          in: path
          required: true
          description: The code of the user to return the session.
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
        "500":
          description: Server Error
  /session/count/{id}:
    get:
      tags:
        - Session
      summary: Returns activated count sessions by id.
      operationId: getActivatedSessionsById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the sessions to return count.
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /session/create:
    post:
      tags:
        - Session
      summary: Creates a new session.
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1000
                code:
                  type: string
                  example: 101
                activated:
                  type: boolean
                  example: false
                end_date:
                  type: string
                  example: 2022-01-31T13:00
                status:
                  type: string
                  example: Inactive
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - id,code
        "500":
          description: Server Error
  /sessions/update/{id}:
    put:
      tags:
        - Session
      summary: Updates session start date, end date or status by id.
      operationId: putSessionById
      parameters:
        - name: id
          in: path
          required: true
          description: The session id to change.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  example: 2022-01-01T13:00
                end_date:
                  type: string
                  example: 2022-01-08T13:00
                status:
                  type: string
                  example: Inactive
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /session/update/{id}/{code}:
    put:
      tags:
        - Session
      summary: Updates session activated, start date, end date or status by id and code.
      operationId: putSessionByIdAndCode
      parameters:
        - name: id
          in: path
          required: true
          description: The session id to change.
        - name: code
          in: path
          required: true
          description: The session user code to change.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activated:
                  type: boolean
                  example: false
                start_date:
                  type: string
                  example: 2022-01-01T13:00
                end_date:
                  type: string
                  example: 2022-01-08T13:00
                status:
                  type: string
                  example: Inactive
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /questions:
    get:
      tags:
        - Question
      summary: Returns all questions.
      operationId: getQuestions
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /questions/{type}/{phase}:
    get:
      tags:
        - Question
      summary: Returns questions by type and phase.
      operationId: getQuestionsByTypeAndPhase
      parameters:
        - name: type
          in: path
          required: true
          description: The type of the question to return.
        - name: phase
          in: path
          required: true
          description: The phase of the question to return.
      responses:
        "200":
          description: Successful operation
        "404":
          description: Not Found
        "500":
          description: Server Error
  /question/create:
    post:
      tags:
        - Question
      summary: Creates a new question.
      operationId: createQuestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Who's the founder of Facebook?
                options:
                  type: array
                  example: ['Mark Zuckerberg', 'Bill Gates', 'Steve Jobs', 'Elon Musk']
                correct_option:
                  type: string
                  example: Mark Zuckerberg
                type:
                  type: string
                  example: parent
                phase:
                  type: string
                  example: A
                deadline_min:
                  type: number
                  example: 30
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - title,options,correct_option,type
        "500":
          description: Server Error
  /answers:
    get:
      tags:
        - Answer
      summary: Returns all answers.
      operationId: getAnswers
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /answer/create:
    post:
      tags:
        - Answer
      summary: Creates a new answer.
      operationId: createAnswer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected:
                  type: string
                  example: Mark Zuckerberg
                UserCode:
                  type: string
                  example: 101
                QuestionId:
                  type: number
                  example: 4
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - title,options
        "500":
          description: Server Error
  /devices:
    get:
      tags:
        - Push Notifications
      summary: Returns all devices.
      operationId: getDevices
      responses:
        "200":
          description: Successful operation
        "500":
          description: Server Error
  /device:
    post:
      tags:
        - Push Notifications
      summary: Creates a device for push notifications.
      operationId: createDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_type:
                  type: number
                  example: 14
                identifier:
                  type: string
                  example: +35799123456
                session_id:
                  type: string
                  example: 500
                external_user_id:
                  type: string
                  example: 502

      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - device_type
        "500":
          description: Server Error
  /web-push:
    post:
      tags:
        - Push Notifications
      summary: Sends a push notifications.
      operationId: sendPush
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 101
                headings:
                  type: string
                  example: Default Heading
                subtitle:
                  type: string
                  example: Default Subtitle
                campaign:
                  type: string
                  example: Default Campaign
                datetime:
                  type: string
                  example: Default Date
                topic:
                  type: string
                  example: Default Topic
                click_url:
                  type: string
                  example: http://localhost:5000/#/questions?phase=A
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - code,datetime,topic,click_url
        "500":
          description: Server Error
  /sms-push:
    post:
      tags:
        - Push Notifications
      summary: Sends an sms notifications.
      operationId: sendSMS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 101
                subtitle:
                  type: string
                  example: Default Subtitle
                datetime:
                  type: string
                  example: Default Date
                click_url:
                  type: string
                  example: http://localhost:5000/#/questions?phase=A
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request | Missing parameters - code,datetime,topic,click_url
        "500":
          description: Server Error

components:
  schemas:
    User:
      type: object
      required:
        - code
        - RoleId
      properties:
        code:
          type: string
          description: The user code
        RoleId:
          type: number
          description: The user role id (1 || 2 = Parent & 3 = Child)
      example:
        id: 4
        code: C2A3
        RoleId: 3
    Role:
      type: object
      required:
        - title
      properties:
        id:
          type: number
          description: The id number
        title:
          type: string
          description: The title of role
      example:
        id: 4
        title: Parent 1
    Session:
      type: object
      required:
        - id
      properties:
        id:
          type: number
          description: The auto-incremented id number
        code:
          type: string
          description: The code of user 1
        activated:
          type: string
          description: false
        start_date:
          type: string
          description: The start date of session
        end_date:
          type: string
          description: The end date of session
        status:
          type: string
          description: The status of session
      example:
        id: 4
        code: 101
        activated: false
        start_date: 2022-08-02T14:00:06.022Z
        end_date: 2022-08-09T14:00:06.022Z
        status: Inactive
    Question:
      type: object
      required:
        - id
        - title
        - options
        - correct_option
        - type
        - phase
        - deadline_min
      properties:
        id:
          type: number
          description: The auto-incremented id number
        title:
          type: string
          description: The question
        options:
          type: array
          description: The list of options
      example:
        id: 13
        title: Who's the ex CEO of Google?
        options: ['Harry Potter', 'Larry Page', 'Elon Musk', 'Jeff Bezos']
        correct_option:
          type: string
          description: Larry Page
        type:
          type: string
          description: The type of question ['parent', 'child']
        phase:
          type: string
          description: The phase of question ['A', 'B', 'C']
        deadline_min:
          type: number
          description: 30
    Answer:
      type: object
      required:
        - id
        - selected
        - UserCode
        - QuestionId
      properties:
        id:
          type: number
          description: The auto-incremented id number
        selected:
          type: string
          description: The answer
        UserCode:
          type: string
          description: The code of the user who answered
        QuestionId:
          type: number
          description: The id of the question
      example:
        id: 66
        selected: Larry Page
        UserCode: 101
        QuestionId: 4
    Push Notification:
      type: object
      required:
        - session_id
        - headings
        - subtitle
        - campaign
        - datetime
        - topic
        - click_url
      properties:
        session_id:
          type: number
          description: The session id
        headings:
          type: string
          description: The push notification heading
        subtitle:
          type: string
          description: The push notification subtitle/content
        campaign:
          type: string
          description: The push notification campaign
        datetime:
          type: string
          description: The push notification send datetime
        topic:
          type: string
          description: The push notification topic
        click_url:
          type: string
          description: The push notification click url
      example:
        session_id: 100
        headings: Default Heading
        subtitle: Default Subtitle
        campaign: Default Campaign
        datetime: Default Datetime
        topic: Default Topic
        click_url: https://localhost:5000/#/questions?phase=A

